Terminals unused in grammar

    PIPE
    INFILE
    OUTFILE
    OUTFILE_APPEND
    ERRFILE
    ERRFILE_APPEND


Grammar

    0 $accept: input $end

    1 input: lines
    2      | ε

    3 lines: oneline
    4      | oneline lines

    5 $@1: ε

    6 oneline: line $@1 eoln
    7        | eoln
    8        | error eoln

    9 eoln: EOLN

   10 line: WORD line
   11     | WORD


Terminals, with rules where they appear

    $end (0) 0
    error (256) 8
    EOLN (258) 9
    PIPE (259)
    INFILE (260)
    OUTFILE (261)
    OUTFILE_APPEND (262)
    ERRFILE (263)
    ERRFILE_APPEND (264)
    WORD <string> (265) 10 11


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    input (12)
        on left: 1 2
        on right: 0
    lines (13)
        on left: 3 4
        on right: 1 4
    oneline (14)
        on left: 6 7 8
        on right: 3 4
    $@1 (15)
        on left: 5
        on right: 6
    eoln (16)
        on left: 9
        on right: 6 7 8
    line <pcmd> (17)
        on left: 10 11
        on right: 6 10


State 0

    0 $accept: • input $end

    error  shift, and go to state 1
    EOLN   shift, and go to state 2
    WORD   shift, and go to state 3

    $end  reduce using rule 2 (input)

    input    go to state 4
    lines    go to state 5
    oneline  go to state 6
    eoln     go to state 7
    line     go to state 8


State 1

    8 oneline: error • eoln

    EOLN  shift, and go to state 2

    eoln  go to state 9


State 2

    9 eoln: EOLN •

    $default  reduce using rule 9 (eoln)


State 3

   10 line: WORD • line
   11     | WORD •

    WORD  shift, and go to state 3

    $default  reduce using rule 11 (line)

    line  go to state 10


State 4

    0 $accept: input • $end

    $end  shift, and go to state 11


State 5

    1 input: lines •

    $default  reduce using rule 1 (input)


State 6

    3 lines: oneline •
    4      | oneline • lines

    error  shift, and go to state 1
    EOLN   shift, and go to state 2
    WORD   shift, and go to state 3

    $end  reduce using rule 3 (lines)

    lines    go to state 12
    oneline  go to state 6
    eoln     go to state 7
    line     go to state 8


State 7

    7 oneline: eoln •

    $default  reduce using rule 7 (oneline)


State 8

    6 oneline: line • $@1 eoln

    $default  reduce using rule 5 ($@1)

    $@1  go to state 13


State 9

    8 oneline: error eoln •

    $default  reduce using rule 8 (oneline)


State 10

   10 line: WORD line •

    $default  reduce using rule 10 (line)


State 11

    0 $accept: input $end •

    $default  accept


State 12

    4 lines: oneline lines •

    $default  reduce using rule 4 (lines)


State 13

    6 oneline: line $@1 • eoln

    EOLN  shift, and go to state 2

    eoln  go to state 14


State 14

    6 oneline: line $@1 eoln •

    $default  reduce using rule 6 (oneline)
